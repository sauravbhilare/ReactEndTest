1 What are React components? Explain functional vs class components.
Ans:- React components are reusable pieces of UI. They let you split the UI into independent, isolated sections.
Functional components:- Just JavaScript functions. They return JSX. Use hooks like `useState` for state.
Class components:- Use ES6 classes, extend `React.Component`, have lifecycle methods, use `this.state` for state.

Functional is now preferred, simpler, and more modern. Class is older, more verbose.

2 What is the difference between state and props?
Ans:- 
      state:- It is a Object in react it can be used stored data and using useState we can update or change state value.

      props:-Props is known as property, using props we can pass data one component to another components.
             Ex.
             Sending Props-
              <Home userData="userData"/>
             Getting Props-
               const ToDo = ({userData}) => {
                console.log(userData);
                  return (
                            <div>
      
                            </div>
                         )
                 }

              export default ToDo

3 Explain the concept of Virtual DOM and how React uses it.
  Ans:- Virtual Dom is the Document Object Model.
        It is Working Virtually so not optimizing Memory.
        In React using Dom we can update Perticular component not update all web page. webpage can not fully load so improve performance and getting data fastly.



4 What are React Hooks? Name a few commonly used ones and their use cases.
  Ans:- React Hooks is the 
  useState:-
     Using useState hook we can change the current state of object or variable.
     const Demo = () => {
     const [demo, setDemo] = useState();
     return (
      <div>
      <input
        type="text"
        className="border p-2 m-2"
        value={demo}
        onChange={(e) => {
          setDemo(e.target.value);
        }}
      />
     
     </div>
  );
};
export default Demo;

  useEffect
  useRef
  useMemo
  useContext

5 What is the difference between useEffect and useLayoutEffect?
  Ans:-useEffect runs after the paint, so the user sees the DOM update first, then the effect runs.  
   useLayoutEffect runs synchronously after DOM mutations but before the browser paints, so it blocks the paint until it finishes.  
   Use useLayoutEffect only when you need to measure DOM or do visual updates before the user sees anything. Otherwise, stick with useEffect.

6 What is the purpose of useMemo and useCallback hooks?
  Ans:-using useMemo and useCallback we can performing Complicated looping or heavy oprations.
       but in useMemo we can memorize the oprations while its running and when this opration can repeat then this gel less time of first time executing.
       In useCallback opration can perform each time start to end so it is time cnsuming task than useMemo.

7 How does React handle reconciliation and diffing?

8 What are controlled vs uncontrolled components in React?

9 How do you implement routing in a React application?
  Ans:- installing react-router-dom dependancy we can implement routing in react application.
        

10 What are Reactâ€™s best practices for performance optimization?

             

